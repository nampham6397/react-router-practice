{"ast":null,"code":"var _jsxFileName = \"/Users/nampham/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetail.js\",\n    _s = $RefreshSig$();\n\nimport { useParams, Route } from \"react-router-dom\";\nimport { Fragment } from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuoteDetail = props => {\n  _s();\n\n  const params = useParams(); // const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n  if (!props.quote) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quote found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(HighlightedQuote, {\n      text: props.text,\n      author: {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: `/quotes/${params.quoteId}/comments`,\n      children: /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuoteDetail, \"+jVsTcECDRo3yq2d7EQxlN9Ixog=\", false, function () {\n  return [useParams];\n});\n\n_c = QuoteDetail;\nexport default QuoteDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteDetail\");","map":{"version":3,"sources":["/Users/nampham/Downloads/09-time-to-practice-starting-code/src/pages/QuoteDetail.js"],"names":["useParams","Route","Fragment","Comments","HighlightedQuote","QuoteDetail","props","params","quote","text","quoteId"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAiC,kBAAjC;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,gBAAP,MAA6B,uCAA7B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAAA;;AAC3B,QAAMC,MAAM,GAAGP,SAAS,EAAxB,CAD2B,CAG3B;;AAEA,MAAI,CAACM,KAAK,CAACE,KAAX,EAAkB;AACd,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI,QAAC,QAAD;AAAA,4BACI,QAAC,gBAAD;AAAkB,MAAA,IAAI,EAAEF,KAAK,CAACG,IAA9B;AAAoC,MAAA,MAAM,EAAE;AAA5C;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAG,WAAUF,MAAM,CAACG,OAAQ,WAAvC;AAAA,6BACI,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAjBD;;GAAML,W;UACaL,S;;;KADbK,W;AAmBN,eAAeA,WAAf","sourcesContent":["import { useParams, Route } from \"react-router-dom\";\nimport {Fragment} from \"react\";\nimport Comments from \"../components/comments/Comments\";\nimport HighlightedQuote from \"../components/quotes/HighlightedQuote\";\n\nconst QuoteDetail = (props) => {\n    const params = useParams();\n\n    // const quote = DUMMY_QUOTES.find(quote => quote.id === params.quoteId);\n\n    if (!props.quote) {\n        return <p>No quote found</p>;\n    }\n\n    return (\n        <Fragment>\n            <HighlightedQuote text={props.text} author={{}} />\n            <Route path={`/quotes/${params.quoteId}/comments`}>\n                <Comments />\n            </Route>\n        </Fragment>\n    );\n};\n\nexport default QuoteDetail;"]},"metadata":{},"sourceType":"module"}